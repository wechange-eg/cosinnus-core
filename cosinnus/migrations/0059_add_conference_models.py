# Generated by Django 2.1.15 on 2020-09-14 10:34

import cosinnus.models.bbb_room
from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cosinnus', '0058_add_sdgs_json_field'),
    ]

    operations = [
        migrations.CreateModel(
            name='BBBRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_id', models.CharField(blank=True, max_length=200, null=True)),
                ('name', models.CharField(blank=True, max_length=160, null=True, verbose_name='room name or title')),
                ('moderator_password', models.CharField(default=cosinnus.models.bbb_room.random_password, help_text='the password set to enter the room as a moderator', max_length=30)),
                ('attendee_password', models.CharField(blank=True, default='', help_text='the password set to enter the room as a attendee', max_length=30, null=True)),
                ('welcome_message', models.CharField(blank=True, help_text='the welcome message, that is displayed to attendees', max_length=300, null=True, verbose_name='the rooms welcome message')),
                ('max_participants', models.PositiveIntegerField(default=None, help_text='maximum number in the conference at the same time', null=True, verbose_name='maximum number of users')),
                ('dial_number', models.CharField(blank=True, default='', help_text='number for dialing into the conference via telephone', max_length=20, null=True, verbose_name='telephone dial in number')),
                ('voice_bridge', models.PositiveIntegerField(default=cosinnus.models.bbb_room.random_voice_bridge, help_text='pin to enter for telephone participants', unique=True, validators=[django.core.validators.MinValueValidator(10000), django.core.validators.MaxValueValidator(99999)], verbose_name='dial in PIN')),
                ('internal_meeting_id', models.CharField(blank=True, max_length=100, null=True)),
                ('parent_meeting_id', models.CharField(blank=True, max_length=100, null=True)),
                ('ended', models.BooleanField(default=False)),
                ('options', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, help_text='options for the room, that are represented in the bigbluebutton API', null=True, verbose_name='room options')),
                ('attendees', models.ManyToManyField(related_name='attendees', to=settings.AUTH_USER_MODEL)),
                ('moderators', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('presenter', models.ForeignKey(blank=True, help_text='this user will enter the BBB presenter mode for this conversation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='presenter', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CosinnusConferenceRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('slug', models.SlugField(help_text='Be extremely careful when changing this slug manually! There can be many side-effects (redirects breaking e.g.)!', verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Short Description')),
                ('type', models.PositiveSmallIntegerField(choices=[(0, 'Lobby'), (1, 'Stage'), (2, 'Workshops'), (3, 'Discussions'), (4, 'Coffee Tables'), (5, 'Results')], default=0, verbose_name='Conference Room Type')),
                ('is_visible', models.BooleanField(default=True, help_text='If a room is not visible, it is not shown in any room lists', verbose_name='Is visible')),
                ('sort_index', models.PositiveSmallIntegerField(default=1, help_text='Rooms are ordered in ascending order on this field', verbose_name='Sorting index')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='Last modified')),
                ('rocket_chat_room_id', models.CharField(max_length=250, null=True, verbose_name='RocketChat room id')),
                ('allow_user_table_creation', models.BooleanField(default=False, help_text='Otherwise, only organisers can create new tables', verbose_name='Allow users to create new coffee tables')),
                ('max_coffeetable_participants', models.PositiveSmallIntegerField(default=6, validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(512)], verbose_name='Maximum Coffee Table Participants')),
                ('creator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to=settings.AUTH_USER_MODEL, verbose_name='Creator')),
            ],
            options={
                'verbose_name': 'Conference Room',
                'verbose_name_plural': 'Conference Rooms',
                'ordering': ('sort_index', 'title'),
            },
        ),
        migrations.AlterField(
            model_name='cosinnusgroup',
            name='conference_is_running',
            field=models.BooleanField(default=False, help_text='Determins whether a group that is marked as conference is running', verbose_name='Conference is running'),
        ),
        migrations.AlterField(
            model_name='cosinnusgroup',
            name='is_conference',
            field=models.BooleanField(default=False, help_text='If a group is marked as conference it is possible to auto-generate accounts for workshop participants', verbose_name='Is conference'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='language',
            field=models.CharField(choices=[('en', 'English--LEAVE-THIS-EMPTY-DO-NOT-TRANSLATE'), ('de', 'Deutsch--LEAVE-THIS-EMPTY-DO-NOT-TRANSLATE'), ('ru', 'Russian--LEAVE-THIS-EMPTY-DO-NOT-TRANSLATE')], default='de', max_length=2, verbose_name='Language'),
        ),
        migrations.AddField(
            model_name='cosinnusconferenceroom',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to=settings.COSINNUS_GROUP_OBJECT_MODEL, verbose_name='Team'),
        ),
        migrations.AddField(
            model_name='cosinnusconferenceroom',
            name='target_result_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.COSINNUS_GROUP_OBJECT_MODEL, verbose_name='Result Project'),
        ),
        migrations.AddField(
            model_name='tagobject',
            name='bbb_room',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='cosinnus.BBBRoom', verbose_name='BigBlueButton conversation room'),
        ),
        migrations.AlterUniqueTogether(
            name='cosinnusconferenceroom',
            unique_together={('slug', 'group')},
        ),
    ]
